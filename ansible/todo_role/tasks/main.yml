---
- name: Create SSH Key Pair in AWS
  amazon.aws.ec2_key:
    name: "{{ key_name }}"
    region: "{{ aws_region }}"
    key_material: "{{ lookup('file', 'todo-key.pub') }}"
    state: present

- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: "my_vpc"
    cidr_block: "{{ aws_vpc_cidr }}"
    region: "{{ aws_region }}"    
    state: present
  register: vpc

- name: Create Subnet
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: "{{ aws_subnet_cidr }}"
    region: "{{ aws_region }}"
    state: present
  register: subnet

- name: Create Security Group
  amazon.aws.ec2_group:
    name: "k8s-security-group"
    description: "Security group for Kubernetes"
    vpc_id: "{{ vpc.vpc.id }}"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        ports:
          - 22
          - 6443
        cidr_ip: 0.0.0.0/0
    state: present
  register: security_group

- name: Launch EC2 Instance
  amazon.aws.ec2_instance:
    name: "k8s-master"
    key_name: "{{ key_name }}"
    region: "{{ aws_region }}"
    instance_type: "{{ instance_type }}"
    security_group: "{{ security_group }}"
    image_id: "{{ ami_id }}"
    subnet_id: "{{ subnet.subnet.id }}"
    wait: yes
    state: running
  register: ec2_instance

- name: Install Docker & Kubernetes
  hosts: all
  become: yes
  tasks:
    - name: Install required packages
      yum:
        name:
          - docker
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable & Start Docker & Kubelet
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop: 
        - docker
        - kubelet

    - name: Initialize Kubernetes Cluster
      shell: "kubeadm init --pod-network-cidr=10.244.0.0/16"
      args:
        creates: /etc/kubernetes/admin.conf      
